//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace com.codeborne.selenide.impl {
    
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaInterfaceAttribute()]
    public partial interface WebDriverContainer {
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Lorg/openqa/selenium/support/events/WebDriverEventListener;)V")]
        void addListener(global::java.lang.Object par0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()V")]
        void closeWebDriver();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Ljava/lang/String;")]
        global::java.lang.String getPageSource();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Ljava/lang/String;")]
        global::java.lang.String getCurrentUrl();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Lorg/openqa/selenium/WebDriver;)Lorg/openqa/selenium/WebDriver;")]
        global::java.lang.Object setWebDriver(global::java.lang.Object par0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Lorg/openqa/selenium/Proxy;)V")]
        void setProxy(global::java.lang.Object par0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Lorg/openqa/selenium/WebDriver;")]
        global::java.lang.Object getWebDriver();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Lorg/openqa/selenium/WebDriver;")]
        global::java.lang.Object getAndCheckWebDriver();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Z")]
        bool hasWebDriverStarted();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()V")]
        void clearBrowserCache();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Ljava/lang/String;")]
        global::java.lang.String getCurrentFrameUrl();
    }
    #endregion
    
    #region Component Designer generated code 
    public partial class WebDriverContainer_ {
        
        public static global::java.lang.Class _class {
            get {
                return global::com.codeborne.selenide.impl.@__WebDriverContainer.staticClass;
            }
        }
    }
    #endregion
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaProxyAttribute(typeof(global::com.codeborne.selenide.impl.WebDriverContainer), typeof(global::com.codeborne.selenide.impl.WebDriverContainer_))]
    [global::net.sf.jni4net.attributes.ClrWrapperAttribute(typeof(global::com.codeborne.selenide.impl.WebDriverContainer), typeof(global::com.codeborne.selenide.impl.WebDriverContainer_))]
    internal sealed partial class @__WebDriverContainer : global::java.lang.Object, global::com.codeborne.selenide.impl.WebDriverContainer {
        
        internal new static global::java.lang.Class staticClass;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_addListener0;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_closeWebDriver1;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_getPageSource2;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_getCurrentUrl3;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_setWebDriver4;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_setProxy5;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_getWebDriver6;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_getAndCheckWebDriver7;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_hasWebDriverStarted8;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_clearBrowserCache9;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_getCurrentFrameUrl10;
        
        private @__WebDriverContainer(global::net.sf.jni4net.jni.JNIEnv @__env) : 
                base(@__env) {
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv @__env, java.lang.Class @__class) {
            global::com.codeborne.selenide.impl.@__WebDriverContainer.staticClass = @__class;
            global::com.codeborne.selenide.impl.@__WebDriverContainer.j4n_addListener0 = @__env.GetMethodID(global::com.codeborne.selenide.impl.@__WebDriverContainer.staticClass, "addListener", "(Lorg/openqa/selenium/support/events/WebDriverEventListener;)V");
            global::com.codeborne.selenide.impl.@__WebDriverContainer.j4n_closeWebDriver1 = @__env.GetMethodID(global::com.codeborne.selenide.impl.@__WebDriverContainer.staticClass, "closeWebDriver", "()V");
            global::com.codeborne.selenide.impl.@__WebDriverContainer.j4n_getPageSource2 = @__env.GetMethodID(global::com.codeborne.selenide.impl.@__WebDriverContainer.staticClass, "getPageSource", "()Ljava/lang/String;");
            global::com.codeborne.selenide.impl.@__WebDriverContainer.j4n_getCurrentUrl3 = @__env.GetMethodID(global::com.codeborne.selenide.impl.@__WebDriverContainer.staticClass, "getCurrentUrl", "()Ljava/lang/String;");
            global::com.codeborne.selenide.impl.@__WebDriverContainer.j4n_setWebDriver4 = @__env.GetMethodID(global::com.codeborne.selenide.impl.@__WebDriverContainer.staticClass, "setWebDriver", "(Lorg/openqa/selenium/WebDriver;)Lorg/openqa/selenium/WebDriver;");
            global::com.codeborne.selenide.impl.@__WebDriverContainer.j4n_setProxy5 = @__env.GetMethodID(global::com.codeborne.selenide.impl.@__WebDriverContainer.staticClass, "setProxy", "(Lorg/openqa/selenium/Proxy;)V");
            global::com.codeborne.selenide.impl.@__WebDriverContainer.j4n_getWebDriver6 = @__env.GetMethodID(global::com.codeborne.selenide.impl.@__WebDriverContainer.staticClass, "getWebDriver", "()Lorg/openqa/selenium/WebDriver;");
            global::com.codeborne.selenide.impl.@__WebDriverContainer.j4n_getAndCheckWebDriver7 = @__env.GetMethodID(global::com.codeborne.selenide.impl.@__WebDriverContainer.staticClass, "getAndCheckWebDriver", "()Lorg/openqa/selenium/WebDriver;");
            global::com.codeborne.selenide.impl.@__WebDriverContainer.j4n_hasWebDriverStarted8 = @__env.GetMethodID(global::com.codeborne.selenide.impl.@__WebDriverContainer.staticClass, "hasWebDriverStarted", "()Z");
            global::com.codeborne.selenide.impl.@__WebDriverContainer.j4n_clearBrowserCache9 = @__env.GetMethodID(global::com.codeborne.selenide.impl.@__WebDriverContainer.staticClass, "clearBrowserCache", "()V");
            global::com.codeborne.selenide.impl.@__WebDriverContainer.j4n_getCurrentFrameUrl10 = @__env.GetMethodID(global::com.codeborne.selenide.impl.@__WebDriverContainer.staticClass, "getCurrentFrameUrl", "()Ljava/lang/String;");
        }
        
        public void addListener(global::java.lang.Object par0) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 12)){
            @__env.CallVoidMethod(this, global::com.codeborne.selenide.impl.@__WebDriverContainer.j4n_addListener0, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, par0));
            }
        }
        
        public void closeWebDriver() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            @__env.CallVoidMethod(this, global::com.codeborne.selenide.impl.@__WebDriverContainer.j4n_closeWebDriver1);
            }
        }
        
        public global::java.lang.String getPageSource() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, @__env.CallObjectMethodPtr(this, global::com.codeborne.selenide.impl.@__WebDriverContainer.j4n_getPageSource2));
            }
        }
        
        public global::java.lang.String getCurrentUrl() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, @__env.CallObjectMethodPtr(this, global::com.codeborne.selenide.impl.@__WebDriverContainer.j4n_getCurrentUrl3));
            }
        }
        
        public global::java.lang.Object setWebDriver(global::java.lang.Object par0) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 12)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, @__env.CallObjectMethodPtr(this, global::com.codeborne.selenide.impl.@__WebDriverContainer.j4n_setWebDriver4, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, par0)));
            }
        }
        
        public void setProxy(global::java.lang.Object par0) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 12)){
            @__env.CallVoidMethod(this, global::com.codeborne.selenide.impl.@__WebDriverContainer.j4n_setProxy5, global::net.sf.jni4net.utils.Convertor.ParStrongCp2J(par0));
            }
        }
        
        public global::java.lang.Object getWebDriver() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, @__env.CallObjectMethodPtr(this, global::com.codeborne.selenide.impl.@__WebDriverContainer.j4n_getWebDriver6));
            }
        }
        
        public global::java.lang.Object getAndCheckWebDriver() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, @__env.CallObjectMethodPtr(this, global::com.codeborne.selenide.impl.@__WebDriverContainer.j4n_getAndCheckWebDriver7));
            }
        }
        
        public bool hasWebDriverStarted() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return ((bool)(@__env.CallBooleanMethod(this, global::com.codeborne.selenide.impl.@__WebDriverContainer.j4n_hasWebDriverStarted8)));
            }
        }
        
        public void clearBrowserCache() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            @__env.CallVoidMethod(this, global::com.codeborne.selenide.impl.@__WebDriverContainer.j4n_clearBrowserCache9);
            }
        }
        
        public global::java.lang.String getCurrentFrameUrl() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, @__env.CallObjectMethodPtr(this, global::com.codeborne.selenide.impl.@__WebDriverContainer.j4n_getCurrentFrameUrl10));
            }
        }
        
        private static global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> @__Init(global::net.sf.jni4net.jni.JNIEnv @__env, global::java.lang.Class @__class) {
            global::System.Type @__type = typeof(__WebDriverContainer);
            global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> methods = new global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod>();
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "addListener", "addListener0", "(Lorg/openqa/selenium/support/events/WebDriverEventListener;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "closeWebDriver", "closeWebDriver1", "()V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getPageSource", "getPageSource2", "()Ljava/lang/String;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getCurrentUrl", "getCurrentUrl3", "()Ljava/lang/String;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "setWebDriver", "setWebDriver4", "(Lorg/openqa/selenium/WebDriver;)Lorg/openqa/selenium/WebDriver;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "setProxy", "setProxy5", "(Lorg/openqa/selenium/Proxy;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getWebDriver", "getWebDriver6", "()Lorg/openqa/selenium/WebDriver;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getAndCheckWebDriver", "getAndCheckWebDriver7", "()Lorg/openqa/selenium/WebDriver;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "hasWebDriverStarted", "hasWebDriverStarted8", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "clearBrowserCache", "clearBrowserCache9", "()V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getCurrentFrameUrl", "getCurrentFrameUrl10", "()Ljava/lang/String;"));
            return methods;
        }
        
        private static void addListener0(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle par0) {
            // (Lorg/openqa/selenium/support/events/WebDriverEventListener;)V
            // (Ljava/lang/Object;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::com.codeborne.selenide.impl.WebDriverContainer @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::com.codeborne.selenide.impl.WebDriverContainer>(@__env, @__obj);
            @__real.addListener(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, par0));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void closeWebDriver1(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()V
            // ()V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::com.codeborne.selenide.impl.WebDriverContainer @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::com.codeborne.selenide.impl.WebDriverContainer>(@__env, @__obj);
            @__real.closeWebDriver();
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static global::net.sf.jni4net.utils.JniHandle getPageSource2(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Ljava/lang/String;
            // ()Ljava/lang/String;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::com.codeborne.selenide.impl.WebDriverContainer @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::com.codeborne.selenide.impl.WebDriverContainer>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.StrongCp2J(@__real.getPageSource());
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle getCurrentUrl3(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Ljava/lang/String;
            // ()Ljava/lang/String;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::com.codeborne.selenide.impl.WebDriverContainer @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::com.codeborne.selenide.impl.WebDriverContainer>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.StrongCp2J(@__real.getCurrentUrl());
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle setWebDriver4(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle par0) {
            // (Lorg/openqa/selenium/WebDriver;)Lorg/openqa/selenium/WebDriver;
            // (Ljava/lang/Object;)Ljava/lang/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::com.codeborne.selenide.impl.WebDriverContainer @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::com.codeborne.selenide.impl.WebDriverContainer>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::java.lang.Object>(@__env, @__real.setWebDriver(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, par0)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void setProxy5(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle par0) {
            // (Lorg/openqa/selenium/Proxy;)V
            // (Ljava/lang/Object;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::com.codeborne.selenide.impl.WebDriverContainer @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::com.codeborne.selenide.impl.WebDriverContainer>(@__env, @__obj);
            @__real.setProxy(global::net.sf.jni4net.utils.Convertor.StrongJ2Cp<global::java.lang.Object>(@__env, par0));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static global::net.sf.jni4net.utils.JniHandle getWebDriver6(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Lorg/openqa/selenium/WebDriver;
            // ()Ljava/lang/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::com.codeborne.selenide.impl.WebDriverContainer @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::com.codeborne.selenide.impl.WebDriverContainer>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::java.lang.Object>(@__env, @__real.getWebDriver());
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle getAndCheckWebDriver7(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Lorg/openqa/selenium/WebDriver;
            // ()Ljava/lang/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::com.codeborne.selenide.impl.WebDriverContainer @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::com.codeborne.selenide.impl.WebDriverContainer>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::java.lang.Object>(@__env, @__real.getAndCheckWebDriver());
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static bool hasWebDriverStarted8(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::com.codeborne.selenide.impl.WebDriverContainer @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::com.codeborne.selenide.impl.WebDriverContainer>(@__env, @__obj);
            @__return = ((bool)(@__real.hasWebDriverStarted()));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void clearBrowserCache9(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()V
            // ()V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::com.codeborne.selenide.impl.WebDriverContainer @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::com.codeborne.selenide.impl.WebDriverContainer>(@__env, @__obj);
            @__real.clearBrowserCache();
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static global::net.sf.jni4net.utils.JniHandle getCurrentFrameUrl10(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Ljava/lang/String;
            // ()Ljava/lang/String;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::com.codeborne.selenide.impl.WebDriverContainer @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::com.codeborne.selenide.impl.WebDriverContainer>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.StrongCp2J(@__real.getCurrentFrameUrl());
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        new internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJvmProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv @__env) {
                return new global::com.codeborne.selenide.impl.@__WebDriverContainer(@__env);
            }
        }
    }
    #endregion
}
